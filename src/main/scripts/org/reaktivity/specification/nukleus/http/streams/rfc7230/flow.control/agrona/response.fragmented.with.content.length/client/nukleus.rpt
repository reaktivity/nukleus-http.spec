#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newClientConnectRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property clientAccept ${nuklei.streams("http", "source")}
property clientConnect ${nuklei.streams("target", "http#source")}
property clientConnectReply ${nuklei.streams("http", "target")}
property clientAcceptReply ${nuklei.streams("source", "http#target")}

property newClientConnectId ${nuklei:newStreamId()}
property newClientAcceptReplyId ${nuklei:newStreamId()}
property newTargetCorrelationId ${nuklei:newCorrelationId()}

connect await ROUTED_CLIENT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientAccept.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(clientAccept.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:clientAcceptId)
read [0x06] "source"
read ([0..8]:clientAcceptRef)
read ([0..8]:sourceCorrelationId)
read ${http:header(":scheme", "http")}
read ${http:header(":method", "GET")}
read ${http:header(":path", "/")}
read ${http:header(":authority", "localhost:8080")}

read notify HTTP_REQUEST_RECEIVED

read [0x00 0x00 0x00 0x03]
read ${clientAcceptId}

close
closed


connect await ROUTED_CLIENT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientConnect.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(clientConnect.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newClientConnectId}
write [0x04] "http"
write ${newClientConnectRef}
write ${newTargetCorrelationId}
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientConnectId}
read [0..4]
read [0..4]

write await HTTP_REQUEST_RECEIVED

write [0x00 0x00 0x00 0x02]
write ${newClientConnectId}
write [0x00 0x28]
write "GET / HTTP/1.1\r\n"
write "Host: localhost:8080\r\n"
write "\r\n"
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientConnectId}
read [0..4]
read [0..4]

close
closed


connect await ROUTED_CLIENT
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientConnectReply.buffer)}
        option agrona:writer ${agrona:oneToOneWriter(clientConnectReply.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:clientConnectReplyId)
read [0x06] "target"
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read ${newTargetCorrelationId}

write [0x40 0x00 0x00 0x02]
write ${clientConnectReplyId}
write [0x00 0x02 0x00 0x00]
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${clientConnectReplyId}
read [0x00 0x36]
read "HTTP/1.1 200 OK\r\n"
read "Custom-Header: value\r\n"
read "Content-Length:"

read [0x00 0x00 0x00 0x02]
read ${clientConnectReplyId}
read [0x00 0x0a]
read " 11\r\n"
read "\r\n"
read "hel"

read notify HTTP_RESPONSE_DECODED

write [0x40 0x00 0x00 0x02]
write ${clientConnectReplyId}
write [0x08 0x00 0x00 0x00]
write [0x08 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${clientConnectReplyId}
read [0x00 0x08]
read "lo world"

write [0x40 0x00 0x00 0x02]
write ${clientConnectReplyId}
write [0x40 0x00 0x00 0x00]
write [0x40 0x00 0x00 0x00]
write flush

close
closed

connect await HTTP_RESPONSE_DECODED
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:oneToOneReader(clientAcceptReply.throttle)}
        option agrona:writer ${agrona:oneToOneWriter(clientAcceptReply.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newClientAcceptReplyId}
write [0x04] "http"
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write ${sourceCorrelationId}
write ${http:header(":status", "200")}
write ${http:header("custom-header", "value")}
write ${http:header("content-length", "11")}
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientAcceptReplyId}
read [0..4]
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newClientAcceptReplyId}
write [0x00 0x03]
write "hel"
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientAcceptReplyId}
read [0..4]
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newClientAcceptReplyId}
write [0x00 0x08]
write "lo world"
write flush

read [0x40 0x00 0x00 0x02]
read ${newClientAcceptReplyId}
read [0..4]
read [0..4]

write [0x00 0x00 0x00 0x03]
write ${newClientAcceptReplyId}
write flush

close
closed
