#
# Copyright 2016-2021 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

accept "nukleus://streams/app#0"
        option nukleus:window 8192
        option nukleus:transmission "half-duplex"


accepted
read nukleus:begin.ext ${http:beginEx()
                             .typeId(nukleus:id("http"))
                             .header(":method", "GET")
                             .header(":scheme", "http")
                             .header(":path", "/")
                             .header(":authority", "localhost:8080")
                             .build()}
connected
read closed

write nukleus:begin.ext ${http:beginEx()
                              .typeId(nukleus:id("http"))
                              .header(":status", "200")
                              .header("server", "CERN/3.0 libwww/2.17")
                              .header("date", "Wed, 01 Feb 2017 19:12:46 GMT")
                              .header("content-type", "text/html; charset=UTF-8")
                              .header("content-length", "113")
                              .build()}
write flush
write notify REQUEST_ONE_RECEIVED

write await RESPONSE_THREE_SENT
write nukleus:data.ext ${http:dataEx()
                             .typeId(nukleus:id("http"))
                             .promise(":method", "GET")
                             .promise(":scheme", "http")
                             .promise(":path", "/push")
                             .promise(":authority", "localhost:8080")
                             .build()}
write flush


accepted
read nukleus:begin.ext ${http:beginEx()
                             .typeId(nukleus:id("http"))
                             .header(":method", "GET")
                             .header(":scheme", "http")
                             .header(":path", "/")
                             .header(":authority", "localhost:8080")
                             .build()}
connected
read closed

write nukleus:begin.ext ${http:beginEx()
                              .typeId(nukleus:id("http"))
                              .header(":status", "200")
                              .header("server", "CERN/3.0 libwww/2.17")
                              .header("date", "Wed, 01 Feb 2017 19:12:46 GMT")
                              .header("content-type", "text/html; charset=UTF-8")
                              .header("content-length", "113")
                              .build()}
write flush
write notify REQUEST_TWO_RECEIVED

write await RESPONSE_THREE_SENT
write nukleus:data.ext ${http:dataEx()
                             .typeId(nukleus:id("http"))
                             .promise(":method", "GET")
                             .promise(":scheme", "http")
                             .promise(":path", "/push")
                             .promise(":authority", "localhost:8080")
                             .build()}
write flush


accepted
read nukleus:begin.ext ${http:beginEx()
                             .typeId(nukleus:id("http"))
                             .header(":method", "GET")
                             .header(":scheme", "http")
                             .header(":path", "/")
                             .header(":authority", "localhost:8080")
                             .build()}
connected
read closed

write nukleus:begin.ext ${http:beginEx()
                              .typeId(nukleus:id("http"))
                              .header(":status", "200")
                              .header("server", "CERN/3.0 libwww/2.17")
                              .header("date", "Wed, 01 Feb 2017 19:12:46 GMT")
                              .header("content-type", "text/html; charset=UTF-8")
                              .header("content-length", "113")
                              .build()}
write flush

write await REQUEST_ONE_RECEIVED
write await REQUEST_TWO_RECEIVED
write notify RESPONSE_THREE_SENT

write nukleus:data.ext ${http:dataEx()
                             .typeId(nukleus:id("http"))
                             .promise(":method", "GET")
                             .promise(":scheme", "http")
                             .promise(":path", "/push")
                             .promise(":authority", "localhost:8080")
                             .build()}
write flush


accepted
read nukleus:begin.ext ${http:beginEx()
                             .typeId(nukleus:id("http"))
                             .header(":method", "GET")
                             .header(":scheme", "http")
                             .header(":path", "/push")
                             .header(":authority", "localhost:8080")
                             .build()}
connected
read closed

accepted
read nukleus:begin.ext ${http:beginEx()
                             .typeId(nukleus:id("http"))
                             .header(":method", "GET")
                             .header(":scheme", "http")
                             .header(":path", "/push")
                             .header(":authority", "localhost:8080")
                             .build()}
connected
read closed

accepted
read nukleus:begin.ext ${http:beginEx()
                             .typeId(nukleus:id("http"))
                             .header(":method", "GET")
                             .header(":scheme", "http")
                             .header(":path", "/push")
                             .header(":authority", "localhost:8080")
                             .build()}
connected
read closed
